ARM GAS  /var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"system_stm32f4xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Blinky/Core/Src/system_stm32f4xx.c"
  20              		.global	SystemCoreClock
  21              		.section	.data.SystemCoreClock,"aw"
  22              		.align	2
  25              	SystemCoreClock:
  26 0000 0024F400 		.word	16000000
  27              		.global	AHBPrescTable
  28              		.section	.rodata.AHBPrescTable,"a"
  29              		.align	2
  32              	AHBPrescTable:
  33 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
  33      00000000 
  33      01020304 
  33      06
  34 000d 070809   		.ascii	"\007\010\011"
  35              		.global	APBPrescTable
  36              		.section	.rodata.APBPrescTable,"a"
  37              		.align	2
  40              	APBPrescTable:
  41 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
  41      01020304 
  42              		.section	.text.SystemInit,"ax",%progbits
  43              		.align	1
  44              		.global	SystemInit
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	SystemInit:
  50              	.LFB130:
   1:Blinky/Core/Src/system_stm32f4xx.c **** /**
   2:Blinky/Core/Src/system_stm32f4xx.c ****   ******************************************************************************
   3:Blinky/Core/Src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:Blinky/Core/Src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:Blinky/Core/Src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   6:Blinky/Core/Src/system_stm32f4xx.c ****   *
   7:Blinky/Core/Src/system_stm32f4xx.c ****   *   This file provides two functions and one global variable to be called from 
   8:Blinky/Core/Src/system_stm32f4xx.c ****   *   user application:
   9:Blinky/Core/Src/system_stm32f4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Blinky/Core/Src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
ARM GAS  /var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s 			page 2


  11:Blinky/Core/Src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  12:Blinky/Core/Src/system_stm32f4xx.c ****   *
  13:Blinky/Core/Src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Blinky/Core/Src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  15:Blinky/Core/Src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  16:Blinky/Core/Src/system_stm32f4xx.c ****   *                                     
  17:Blinky/Core/Src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Blinky/Core/Src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  19:Blinky/Core/Src/system_stm32f4xx.c ****   *                                 during program execution.
  20:Blinky/Core/Src/system_stm32f4xx.c ****   *
  21:Blinky/Core/Src/system_stm32f4xx.c ****   *
  22:Blinky/Core/Src/system_stm32f4xx.c ****   ******************************************************************************
  23:Blinky/Core/Src/system_stm32f4xx.c ****   * @attention
  24:Blinky/Core/Src/system_stm32f4xx.c ****   *
  25:Blinky/Core/Src/system_stm32f4xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  26:Blinky/Core/Src/system_stm32f4xx.c ****   * All rights reserved.
  27:Blinky/Core/Src/system_stm32f4xx.c ****   *
  28:Blinky/Core/Src/system_stm32f4xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  29:Blinky/Core/Src/system_stm32f4xx.c ****   * in the root directory of this software component.
  30:Blinky/Core/Src/system_stm32f4xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  31:Blinky/Core/Src/system_stm32f4xx.c ****   *
  32:Blinky/Core/Src/system_stm32f4xx.c ****   ******************************************************************************
  33:Blinky/Core/Src/system_stm32f4xx.c ****   */
  34:Blinky/Core/Src/system_stm32f4xx.c **** 
  35:Blinky/Core/Src/system_stm32f4xx.c **** /** @addtogroup CMSIS
  36:Blinky/Core/Src/system_stm32f4xx.c ****   * @{
  37:Blinky/Core/Src/system_stm32f4xx.c ****   */
  38:Blinky/Core/Src/system_stm32f4xx.c **** 
  39:Blinky/Core/Src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
  40:Blinky/Core/Src/system_stm32f4xx.c ****   * @{
  41:Blinky/Core/Src/system_stm32f4xx.c ****   */  
  42:Blinky/Core/Src/system_stm32f4xx.c ****   
  43:Blinky/Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
  44:Blinky/Core/Src/system_stm32f4xx.c ****   * @{
  45:Blinky/Core/Src/system_stm32f4xx.c ****   */
  46:Blinky/Core/Src/system_stm32f4xx.c **** 
  47:Blinky/Core/Src/system_stm32f4xx.c **** 
  48:Blinky/Core/Src/system_stm32f4xx.c **** #include "stm32f4xx.h"
  49:Blinky/Core/Src/system_stm32f4xx.c **** 
  50:Blinky/Core/Src/system_stm32f4xx.c **** #if !defined  (HSE_VALUE) 
  51:Blinky/Core/Src/system_stm32f4xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  52:Blinky/Core/Src/system_stm32f4xx.c **** #endif /* HSE_VALUE */
  53:Blinky/Core/Src/system_stm32f4xx.c **** 
  54:Blinky/Core/Src/system_stm32f4xx.c **** #if !defined  (HSI_VALUE)
  55:Blinky/Core/Src/system_stm32f4xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  56:Blinky/Core/Src/system_stm32f4xx.c **** #endif /* HSI_VALUE */
  57:Blinky/Core/Src/system_stm32f4xx.c **** 
  58:Blinky/Core/Src/system_stm32f4xx.c **** /**
  59:Blinky/Core/Src/system_stm32f4xx.c ****   * @}
  60:Blinky/Core/Src/system_stm32f4xx.c ****   */
  61:Blinky/Core/Src/system_stm32f4xx.c **** 
  62:Blinky/Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
  63:Blinky/Core/Src/system_stm32f4xx.c ****   * @{
  64:Blinky/Core/Src/system_stm32f4xx.c ****   */
  65:Blinky/Core/Src/system_stm32f4xx.c **** 
  66:Blinky/Core/Src/system_stm32f4xx.c **** /**
  67:Blinky/Core/Src/system_stm32f4xx.c ****   * @}
ARM GAS  /var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s 			page 3


  68:Blinky/Core/Src/system_stm32f4xx.c ****   */
  69:Blinky/Core/Src/system_stm32f4xx.c **** 
  70:Blinky/Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
  71:Blinky/Core/Src/system_stm32f4xx.c ****   * @{
  72:Blinky/Core/Src/system_stm32f4xx.c ****   */
  73:Blinky/Core/Src/system_stm32f4xx.c **** 
  74:Blinky/Core/Src/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
  75:Blinky/Core/Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM or SDRAM as data memory  */
  76:Blinky/Core/Src/system_stm32f4xx.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx)\
  77:Blinky/Core/Src/system_stm32f4xx.c ****  || defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
  78:Blinky/Core/Src/system_stm32f4xx.c ****  || defined(STM32F469xx) || defined(STM32F479xx) || defined(STM32F412Zx) || defined(STM32F412Vx)
  79:Blinky/Core/Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
  80:Blinky/Core/Src/system_stm32f4xx.c **** #endif /* STM32F40xxx || STM32F41xxx || STM32F42xxx || STM32F43xxx || STM32F469xx || STM32F479xx ||
  81:Blinky/Core/Src/system_stm32f4xx.c ****           STM32F412Zx || STM32F412Vx */
  82:Blinky/Core/Src/system_stm32f4xx.c ****  
  83:Blinky/Core/Src/system_stm32f4xx.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
  84:Blinky/Core/Src/system_stm32f4xx.c ****  || defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
  85:Blinky/Core/Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSDRAM */
  86:Blinky/Core/Src/system_stm32f4xx.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F446xx || STM32F469xx ||
  87:Blinky/Core/Src/system_stm32f4xx.c ****           STM32F479xx */
  88:Blinky/Core/Src/system_stm32f4xx.c **** 
  89:Blinky/Core/Src/system_stm32f4xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  90:Blinky/Core/Src/system_stm32f4xx.c ****          configuration. */
  91:Blinky/Core/Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  92:Blinky/Core/Src/system_stm32f4xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
  93:Blinky/Core/Src/system_stm32f4xx.c ****      remap of boot address selected */
  94:Blinky/Core/Src/system_stm32f4xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  95:Blinky/Core/Src/system_stm32f4xx.c **** 
  96:Blinky/Core/Src/system_stm32f4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  97:Blinky/Core/Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  98:Blinky/Core/Src/system_stm32f4xx.c ****      in Sram else user remap will be done in Flash. */
  99:Blinky/Core/Src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 100:Blinky/Core/Src/system_stm32f4xx.c **** #if defined(VECT_TAB_SRAM)
 101:Blinky/Core/Src/system_stm32f4xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       /*!< Vector Table base address field.
 102:Blinky/Core/Src/system_stm32f4xx.c ****                                                      This value must be a multiple of 0x200. */
 103:Blinky/Core/Src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 104:Blinky/Core/Src/system_stm32f4xx.c ****                                                      This value must be a multiple of 0x200. */
 105:Blinky/Core/Src/system_stm32f4xx.c **** #else
 106:Blinky/Core/Src/system_stm32f4xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 107:Blinky/Core/Src/system_stm32f4xx.c ****                                                      This value must be a multiple of 0x200. */
 108:Blinky/Core/Src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 109:Blinky/Core/Src/system_stm32f4xx.c ****                                                      This value must be a multiple of 0x200. */
 110:Blinky/Core/Src/system_stm32f4xx.c **** #endif /* VECT_TAB_SRAM */
 111:Blinky/Core/Src/system_stm32f4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 112:Blinky/Core/Src/system_stm32f4xx.c **** /******************************************************************************/
 113:Blinky/Core/Src/system_stm32f4xx.c **** 
 114:Blinky/Core/Src/system_stm32f4xx.c **** /**
 115:Blinky/Core/Src/system_stm32f4xx.c ****   * @}
 116:Blinky/Core/Src/system_stm32f4xx.c ****   */
 117:Blinky/Core/Src/system_stm32f4xx.c **** 
 118:Blinky/Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 119:Blinky/Core/Src/system_stm32f4xx.c ****   * @{
 120:Blinky/Core/Src/system_stm32f4xx.c ****   */
 121:Blinky/Core/Src/system_stm32f4xx.c **** 
 122:Blinky/Core/Src/system_stm32f4xx.c **** /**
 123:Blinky/Core/Src/system_stm32f4xx.c ****   * @}
 124:Blinky/Core/Src/system_stm32f4xx.c ****   */
ARM GAS  /var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s 			page 4


 125:Blinky/Core/Src/system_stm32f4xx.c **** 
 126:Blinky/Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 127:Blinky/Core/Src/system_stm32f4xx.c ****   * @{
 128:Blinky/Core/Src/system_stm32f4xx.c ****   */
 129:Blinky/Core/Src/system_stm32f4xx.c ****   /* This variable is updated in three ways:
 130:Blinky/Core/Src/system_stm32f4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 131:Blinky/Core/Src/system_stm32f4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 132:Blinky/Core/Src/system_stm32f4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 133:Blinky/Core/Src/system_stm32f4xx.c ****          Note: If you use this function to configure the system clock; then there
 134:Blinky/Core/Src/system_stm32f4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 135:Blinky/Core/Src/system_stm32f4xx.c ****                variable is updated automatically.
 136:Blinky/Core/Src/system_stm32f4xx.c ****   */
 137:Blinky/Core/Src/system_stm32f4xx.c **** uint32_t SystemCoreClock = 16000000;
 138:Blinky/Core/Src/system_stm32f4xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 139:Blinky/Core/Src/system_stm32f4xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 140:Blinky/Core/Src/system_stm32f4xx.c **** /**
 141:Blinky/Core/Src/system_stm32f4xx.c ****   * @}
 142:Blinky/Core/Src/system_stm32f4xx.c ****   */
 143:Blinky/Core/Src/system_stm32f4xx.c **** 
 144:Blinky/Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 145:Blinky/Core/Src/system_stm32f4xx.c ****   * @{
 146:Blinky/Core/Src/system_stm32f4xx.c ****   */
 147:Blinky/Core/Src/system_stm32f4xx.c **** 
 148:Blinky/Core/Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 149:Blinky/Core/Src/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 150:Blinky/Core/Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 151:Blinky/Core/Src/system_stm32f4xx.c **** 
 152:Blinky/Core/Src/system_stm32f4xx.c **** /**
 153:Blinky/Core/Src/system_stm32f4xx.c ****   * @}
 154:Blinky/Core/Src/system_stm32f4xx.c ****   */
 155:Blinky/Core/Src/system_stm32f4xx.c **** 
 156:Blinky/Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 157:Blinky/Core/Src/system_stm32f4xx.c ****   * @{
 158:Blinky/Core/Src/system_stm32f4xx.c ****   */
 159:Blinky/Core/Src/system_stm32f4xx.c **** 
 160:Blinky/Core/Src/system_stm32f4xx.c **** /**
 161:Blinky/Core/Src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 162:Blinky/Core/Src/system_stm32f4xx.c ****   *         Initialize the FPU setting, vector table location and External memory 
 163:Blinky/Core/Src/system_stm32f4xx.c ****   *         configuration.
 164:Blinky/Core/Src/system_stm32f4xx.c ****   * @param  None
 165:Blinky/Core/Src/system_stm32f4xx.c ****   * @retval None
 166:Blinky/Core/Src/system_stm32f4xx.c ****   */
 167:Blinky/Core/Src/system_stm32f4xx.c **** void SystemInit(void)
 168:Blinky/Core/Src/system_stm32f4xx.c **** {
  51              		.loc 1 168 1
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 1, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56 0000 80B4     		push	{r7}
  57              	.LCFI0:
  58              		.cfi_def_cfa_offset 4
  59              		.cfi_offset 7, -4
  60 0002 00AF     		add	r7, sp, #0
  61              	.LCFI1:
  62              		.cfi_def_cfa_register 7
 169:Blinky/Core/Src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
ARM GAS  /var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s 			page 5


 170:Blinky/Core/Src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 171:Blinky/Core/Src/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  63              		.loc 1 171 8
  64 0004 064B     		ldr	r3, .L2
  65 0006 D3F88830 		ldr	r3, [r3, #136]
  66 000a 054A     		ldr	r2, .L2
  67              		.loc 1 171 16
  68 000c 43F47003 		orr	r3, r3, #15728640
  69 0010 C2F88830 		str	r3, [r2, #136]
 172:Blinky/Core/Src/system_stm32f4xx.c ****   #endif
 173:Blinky/Core/Src/system_stm32f4xx.c **** 
 174:Blinky/Core/Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 175:Blinky/Core/Src/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 176:Blinky/Core/Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 177:Blinky/Core/Src/system_stm32f4xx.c **** 
 178:Blinky/Core/Src/system_stm32f4xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 179:Blinky/Core/Src/system_stm32f4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 180:Blinky/Core/Src/system_stm32f4xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM 
 181:Blinky/Core/Src/system_stm32f4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 182:Blinky/Core/Src/system_stm32f4xx.c **** }
  70              		.loc 1 182 1
  71 0014 00BF     		nop
  72 0016 BD46     		mov	sp, r7
  73              	.LCFI2:
  74              		.cfi_def_cfa_register 13
  75              		@ sp needed
  76 0018 5DF8047B 		ldr	r7, [sp], #4
  77              	.LCFI3:
  78              		.cfi_restore 7
  79              		.cfi_def_cfa_offset 0
  80 001c 7047     		bx	lr
  81              	.L3:
  82 001e 00BF     		.align	2
  83              	.L2:
  84 0020 00ED00E0 		.word	-536810240
  85              		.cfi_endproc
  86              	.LFE130:
  88              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  89              		.align	1
  90              		.global	SystemCoreClockUpdate
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	SystemCoreClockUpdate:
  96              	.LFB131:
 183:Blinky/Core/Src/system_stm32f4xx.c **** 
 184:Blinky/Core/Src/system_stm32f4xx.c **** /**
 185:Blinky/Core/Src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 186:Blinky/Core/Src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 187:Blinky/Core/Src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 188:Blinky/Core/Src/system_stm32f4xx.c ****   *         other parameters.
 189:Blinky/Core/Src/system_stm32f4xx.c ****   *           
 190:Blinky/Core/Src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 191:Blinky/Core/Src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 192:Blinky/Core/Src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 193:Blinky/Core/Src/system_stm32f4xx.c ****   *     
 194:Blinky/Core/Src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
ARM GAS  /var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s 			page 6


 195:Blinky/Core/Src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 196:Blinky/Core/Src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 197:Blinky/Core/Src/system_stm32f4xx.c ****   *             
 198:Blinky/Core/Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 199:Blinky/Core/Src/system_stm32f4xx.c ****   *                                              
 200:Blinky/Core/Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 201:Blinky/Core/Src/system_stm32f4xx.c ****   *                          
 202:Blinky/Core/Src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 203:Blinky/Core/Src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 204:Blinky/Core/Src/system_stm32f4xx.c ****   *         
 205:Blinky/Core/Src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 206:Blinky/Core/Src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 207:Blinky/Core/Src/system_stm32f4xx.c ****   *             in voltage and temperature.   
 208:Blinky/Core/Src/system_stm32f4xx.c ****   *    
 209:Blinky/Core/Src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (its value
 210:Blinky/Core/Src/system_stm32f4xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 211:Blinky/Core/Src/system_stm32f4xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 212:Blinky/Core/Src/system_stm32f4xx.c ****   *              may have wrong result.
 213:Blinky/Core/Src/system_stm32f4xx.c ****   *                
 214:Blinky/Core/Src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 215:Blinky/Core/Src/system_stm32f4xx.c ****   *           value for HSE crystal.
 216:Blinky/Core/Src/system_stm32f4xx.c ****   *     
 217:Blinky/Core/Src/system_stm32f4xx.c ****   * @param  None
 218:Blinky/Core/Src/system_stm32f4xx.c ****   * @retval None
 219:Blinky/Core/Src/system_stm32f4xx.c ****   */
 220:Blinky/Core/Src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 221:Blinky/Core/Src/system_stm32f4xx.c **** {
  97              		.loc 1 221 1
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 24
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102 0000 80B4     		push	{r7}
 103              	.LCFI4:
 104              		.cfi_def_cfa_offset 4
 105              		.cfi_offset 7, -4
 106 0002 87B0     		sub	sp, sp, #28
 107              	.LCFI5:
 108              		.cfi_def_cfa_offset 32
 109 0004 00AF     		add	r7, sp, #0
 110              	.LCFI6:
 111              		.cfi_def_cfa_register 7
 222:Blinky/Core/Src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 112              		.loc 1 222 12
 113 0006 0023     		movs	r3, #0
 114 0008 3B61     		str	r3, [r7, #16]
 115              		.loc 1 222 21
 116 000a 0023     		movs	r3, #0
 117 000c 7B61     		str	r3, [r7, #20]
 118              		.loc 1 222 33
 119 000e 0223     		movs	r3, #2
 120 0010 FB60     		str	r3, [r7, #12]
 121              		.loc 1 222 43
 122 0012 0023     		movs	r3, #0
 123 0014 BB60     		str	r3, [r7, #8]
 124              		.loc 1 222 58
 125 0016 0223     		movs	r3, #2
ARM GAS  /var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s 			page 7


 126 0018 7B60     		str	r3, [r7, #4]
 223:Blinky/Core/Src/system_stm32f4xx.c ****   
 224:Blinky/Core/Src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 225:Blinky/Core/Src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 127              		.loc 1 225 12
 128 001a 344B     		ldr	r3, .L12
 129 001c 9B68     		ldr	r3, [r3, #8]
 130              		.loc 1 225 7
 131 001e 03F00C03 		and	r3, r3, #12
 132 0022 3B61     		str	r3, [r7, #16]
 226:Blinky/Core/Src/system_stm32f4xx.c **** 
 227:Blinky/Core/Src/system_stm32f4xx.c ****   switch (tmp)
 133              		.loc 1 227 3
 134 0024 3B69     		ldr	r3, [r7, #16]
 135 0026 082B     		cmp	r3, #8
 136 0028 11D0     		beq	.L5
 137 002a 3B69     		ldr	r3, [r7, #16]
 138 002c 082B     		cmp	r3, #8
 139 002e 44D8     		bhi	.L6
 140 0030 3B69     		ldr	r3, [r7, #16]
 141 0032 002B     		cmp	r3, #0
 142 0034 03D0     		beq	.L7
 143 0036 3B69     		ldr	r3, [r7, #16]
 144 0038 042B     		cmp	r3, #4
 145 003a 04D0     		beq	.L8
 146 003c 3DE0     		b	.L6
 147              	.L7:
 228:Blinky/Core/Src/system_stm32f4xx.c ****   {
 229:Blinky/Core/Src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 230:Blinky/Core/Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 148              		.loc 1 230 23
 149 003e 2C4B     		ldr	r3, .L12+4
 150 0040 2C4A     		ldr	r2, .L12+8
 151 0042 1A60     		str	r2, [r3]
 231:Blinky/Core/Src/system_stm32f4xx.c ****       break;
 152              		.loc 1 231 7
 153 0044 3DE0     		b	.L9
 154              	.L8:
 232:Blinky/Core/Src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 233:Blinky/Core/Src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 155              		.loc 1 233 23
 156 0046 2A4B     		ldr	r3, .L12+4
 157 0048 2B4A     		ldr	r2, .L12+12
 158 004a 1A60     		str	r2, [r3]
 234:Blinky/Core/Src/system_stm32f4xx.c ****       break;
 159              		.loc 1 234 7
 160 004c 39E0     		b	.L9
 161              	.L5:
 235:Blinky/Core/Src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 236:Blinky/Core/Src/system_stm32f4xx.c **** 
 237:Blinky/Core/Src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 238:Blinky/Core/Src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 239:Blinky/Core/Src/system_stm32f4xx.c ****          */    
 240:Blinky/Core/Src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 162              		.loc 1 240 23
 163 004e 274B     		ldr	r3, .L12
 164 0050 5B68     		ldr	r3, [r3, #4]
ARM GAS  /var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s 			page 8


 165              		.loc 1 240 55
 166 0052 9B0D     		lsrs	r3, r3, #22
 167              		.loc 1 240 17
 168 0054 03F00103 		and	r3, r3, #1
 169 0058 BB60     		str	r3, [r7, #8]
 241:Blinky/Core/Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 170              		.loc 1 241 17
 171 005a 244B     		ldr	r3, .L12
 172 005c 5B68     		ldr	r3, [r3, #4]
 173              		.loc 1 241 12
 174 005e 03F03F03 		and	r3, r3, #63
 175 0062 7B60     		str	r3, [r7, #4]
 242:Blinky/Core/Src/system_stm32f4xx.c ****       
 243:Blinky/Core/Src/system_stm32f4xx.c ****       if (pllsource != 0)
 176              		.loc 1 243 10
 177 0064 BB68     		ldr	r3, [r7, #8]
 178 0066 002B     		cmp	r3, #0
 179 0068 0CD0     		beq	.L10
 244:Blinky/Core/Src/system_stm32f4xx.c ****       {
 245:Blinky/Core/Src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 246:Blinky/Core/Src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 180              		.loc 1 246 29
 181 006a 234A     		ldr	r2, .L12+12
 182 006c 7B68     		ldr	r3, [r7, #4]
 183 006e B2FBF3F3 		udiv	r3, r2, r3
 184              		.loc 1 246 44
 185 0072 1E4A     		ldr	r2, .L12
 186 0074 5268     		ldr	r2, [r2, #4]
 187              		.loc 1 246 74
 188 0076 9209     		lsrs	r2, r2, #6
 189 0078 C2F30802 		ubfx	r2, r2, #0, #9
 190              		.loc 1 246 16
 191 007c 02FB03F3 		mul	r3, r2, r3
 192 0080 7B61     		str	r3, [r7, #20]
 193 0082 0BE0     		b	.L11
 194              	.L10:
 247:Blinky/Core/Src/system_stm32f4xx.c ****       }
 248:Blinky/Core/Src/system_stm32f4xx.c ****       else
 249:Blinky/Core/Src/system_stm32f4xx.c ****       {
 250:Blinky/Core/Src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 251:Blinky/Core/Src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 195              		.loc 1 251 29
 196 0084 1B4A     		ldr	r2, .L12+8
 197 0086 7B68     		ldr	r3, [r7, #4]
 198 0088 B2FBF3F3 		udiv	r3, r2, r3
 199              		.loc 1 251 44
 200 008c 174A     		ldr	r2, .L12
 201 008e 5268     		ldr	r2, [r2, #4]
 202              		.loc 1 251 74
 203 0090 9209     		lsrs	r2, r2, #6
 204 0092 C2F30802 		ubfx	r2, r2, #0, #9
 205              		.loc 1 251 16
 206 0096 02FB03F3 		mul	r3, r2, r3
 207 009a 7B61     		str	r3, [r7, #20]
 208              	.L11:
 252:Blinky/Core/Src/system_stm32f4xx.c ****       }
 253:Blinky/Core/Src/system_stm32f4xx.c **** 
ARM GAS  /var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s 			page 9


 254:Blinky/Core/Src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 209              		.loc 1 254 20
 210 009c 134B     		ldr	r3, .L12
 211 009e 5B68     		ldr	r3, [r3, #4]
 212              		.loc 1 254 50
 213 00a0 1B0C     		lsrs	r3, r3, #16
 214 00a2 03F00303 		and	r3, r3, #3
 215              		.loc 1 254 56
 216 00a6 0133     		adds	r3, r3, #1
 217              		.loc 1 254 12
 218 00a8 5B00     		lsls	r3, r3, #1
 219 00aa FB60     		str	r3, [r7, #12]
 255:Blinky/Core/Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 220              		.loc 1 255 31
 221 00ac 7A69     		ldr	r2, [r7, #20]
 222 00ae FB68     		ldr	r3, [r7, #12]
 223 00b0 B2FBF3F3 		udiv	r3, r2, r3
 224              		.loc 1 255 23
 225 00b4 0E4A     		ldr	r2, .L12+4
 226 00b6 1360     		str	r3, [r2]
 256:Blinky/Core/Src/system_stm32f4xx.c ****       break;
 227              		.loc 1 256 7
 228 00b8 03E0     		b	.L9
 229              	.L6:
 257:Blinky/Core/Src/system_stm32f4xx.c ****     default:
 258:Blinky/Core/Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 230              		.loc 1 258 23
 231 00ba 0D4B     		ldr	r3, .L12+4
 232 00bc 0D4A     		ldr	r2, .L12+8
 233 00be 1A60     		str	r2, [r3]
 259:Blinky/Core/Src/system_stm32f4xx.c ****       break;
 234              		.loc 1 259 7
 235 00c0 00BF     		nop
 236              	.L9:
 260:Blinky/Core/Src/system_stm32f4xx.c ****   }
 261:Blinky/Core/Src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 262:Blinky/Core/Src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 263:Blinky/Core/Src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 237              		.loc 1 263 28
 238 00c2 0A4B     		ldr	r3, .L12
 239 00c4 9B68     		ldr	r3, [r3, #8]
 240              		.loc 1 263 52
 241 00c6 1B09     		lsrs	r3, r3, #4
 242 00c8 03F00F03 		and	r3, r3, #15
 243              		.loc 1 263 22
 244 00cc 0B4A     		ldr	r2, .L12+16
 245 00ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 246              		.loc 1 263 7
 247 00d0 3B61     		str	r3, [r7, #16]
 264:Blinky/Core/Src/system_stm32f4xx.c ****   /* HCLK frequency */
 265:Blinky/Core/Src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 248              		.loc 1 265 19
 249 00d2 074B     		ldr	r3, .L12+4
 250 00d4 1A68     		ldr	r2, [r3]
 251 00d6 3B69     		ldr	r3, [r7, #16]
 252 00d8 22FA03F3 		lsr	r3, r2, r3
 253 00dc 044A     		ldr	r2, .L12+4
ARM GAS  /var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s 			page 10


 254 00de 1360     		str	r3, [r2]
 266:Blinky/Core/Src/system_stm32f4xx.c **** }
 255              		.loc 1 266 1
 256 00e0 00BF     		nop
 257 00e2 1C37     		adds	r7, r7, #28
 258              	.LCFI7:
 259              		.cfi_def_cfa_offset 4
 260 00e4 BD46     		mov	sp, r7
 261              	.LCFI8:
 262              		.cfi_def_cfa_register 13
 263              		@ sp needed
 264 00e6 5DF8047B 		ldr	r7, [sp], #4
 265              	.LCFI9:
 266              		.cfi_restore 7
 267              		.cfi_def_cfa_offset 0
 268 00ea 7047     		bx	lr
 269              	.L13:
 270              		.align	2
 271              	.L12:
 272 00ec 00380240 		.word	1073887232
 273 00f0 00000000 		.word	SystemCoreClock
 274 00f4 0024F400 		.word	16000000
 275 00f8 40787D01 		.word	25000000
 276 00fc 00000000 		.word	AHBPrescTable
 277              		.cfi_endproc
 278              	.LFE131:
 280              		.text
 281              	.Letext0:
 282              		.file 2 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 283              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 284              		.file 4 "Blinky/Drivers/CMSIS/Include/core_cm4.h"
 285              		.file 5 "Blinky/Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 286              		.file 6 "Blinky/Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
ARM GAS  /var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f4xx.c
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:25     .data.SystemCoreClock:00000000 SystemCoreClock
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:22     .data.SystemCoreClock:00000000 $d
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:32     .rodata.AHBPrescTable:00000000 AHBPrescTable
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:29     .rodata.AHBPrescTable:00000000 $d
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:40     .rodata.APBPrescTable:00000000 APBPrescTable
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:37     .rodata.APBPrescTable:00000000 $d
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:43     .text.SystemInit:00000000 $t
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:49     .text.SystemInit:00000000 SystemInit
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:84     .text.SystemInit:00000020 $d
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:89     .text.SystemCoreClockUpdate:00000000 $t
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:95     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
/var/folders/ht/c3vz8w453bj15v16clp2n4q439hggx/T//ccfjRnML.s:272    .text.SystemCoreClockUpdate:000000ec $d

NO UNDEFINED SYMBOLS
